<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="726" onload="init(evt)" viewBox="0 0 1200 726" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="726.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="709" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="709" > </text>
<g id="frames">
<g >
<title>ext4_writepages (1,145,993,460 samples, 26.81%)</title><rect x="19.5" y="357" width="316.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="22.46" y="367.5" >ext4_writepages</text>
</g>
<g >
<title>fopen@@GLIBC_2.2.5 (530,178,194 samples, 12.40%)</title><rect x="335.8" y="581" width="146.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="338.83" y="591.5" >fopen@@GLIBC_2.2.5</text>
</g>
<g >
<title>intel_iommu_map_pages (479,902,718 samples, 11.23%)</title><rect x="108.9" y="69" width="132.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="111.92" y="79.5" >intel_iommu_map_..</text>
</g>
<g >
<title>x64_sys_call (2,424,873,601 samples, 56.73%)</title><rect x="513.5" y="533" width="669.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="516.51" y="543.5" >x64_sys_call</text>
</g>
<g >
<title>ext4_invalidate_folio (114,099,443 samples, 2.67%)</title><rect x="450.7" y="293" width="31.5" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="453.67" y="303.5" >ex..</text>
</g>
<g >
<title>std::ostream::write (2,538,319,352 samples, 59.38%)</title><rect x="482.2" y="613" width="700.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="485.19" y="623.5" >std::ostream::write</text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (114,099,443 samples, 2.67%)</title><rect x="450.7" y="229" width="31.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="453.67" y="239.5" >jb..</text>
</g>
<g >
<title>nvme_map_data (555,477,682 samples, 13.00%)</title><rect x="108.9" y="165" width="153.4" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="111.92" y="175.5" >nvme_map_data</text>
</g>
<g >
<title>strlen (28,569,145 samples, 0.67%)</title><rect x="534.3" y="405" width="7.9" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="537.28" y="415.5" ></text>
</g>
<g >
<title>ext4_remove_blocks (43,977,952 samples, 1.03%)</title><rect x="335.8" y="277" width="12.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="338.83" y="287.5" ></text>
</g>
<g >
<title>submit_bio (879,533,137 samples, 20.58%)</title><rect x="19.5" y="309" width="242.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="22.46" y="319.5" >submit_bio</text>
</g>
<g >
<title>do_syscall_64 (34,275,130 samples, 0.80%)</title><rect x="10.0" y="613" width="9.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>mod_objcg_state (28,140,843 samples, 0.66%)</title><rect x="468.2" y="149" width="7.7" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="471.16" y="159.5" ></text>
</g>
<g >
<title>load_elf_binary (34,275,130 samples, 0.80%)</title><rect x="10.0" y="485" width="9.5" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>__es_remove_extent (24,348,656 samples, 0.57%)</title><rect x="977.4" y="341" width="6.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="980.37" y="351.5" ></text>
</g>
<g >
<title>do_truncate (530,178,194 samples, 12.40%)</title><rect x="335.8" y="389" width="146.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="338.83" y="399.5" >do_truncate</text>
</g>
<g >
<title>_IO_file_fopen@@GLIBC_2.2.5 (530,178,194 samples, 12.40%)</title><rect x="335.8" y="565" width="146.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="338.83" y="575.5" >_IO_file_fopen@@GL..</text>
</g>
<g >
<title>x64_sys_call (530,178,194 samples, 12.40%)</title><rect x="335.8" y="485" width="146.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="338.83" y="495.5" >x64_sys_call</text>
</g>
<g >
<title>do_filp_open (530,178,194 samples, 12.40%)</title><rect x="335.8" y="437" width="146.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="338.83" y="447.5" >do_filp_open</text>
</g>
<g >
<title>find_get_entries (26,967,308 samples, 0.63%)</title><rect x="443.2" y="309" width="7.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="446.22" y="319.5" ></text>
</g>
<g >
<title>free_unref_page_list (32,760,101 samples, 0.77%)</title><rect x="355.7" y="277" width="9.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="358.69" y="287.5" ></text>
</g>
<g >
<title>mpage_submit_folio (192,253,025 samples, 4.50%)</title><rect x="274.9" y="293" width="53.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="277.94" y="303.5" >mpage..</text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::close (1,145,993,460 samples, 26.81%)</title><rect x="19.5" y="597" width="316.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="22.46" y="607.5" >std::__basic_file&lt;char&gt;::close</text>
</g>
<g >
<title>std::ostream::write (25,534,940 samples, 0.60%)</title><rect x="1182.9" y="629" width="7.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1185.93" y="639.5" ></text>
</g>
<g >
<title>submit_bio_noacct (879,533,137 samples, 20.58%)</title><rect x="19.5" y="293" width="242.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="22.46" y="303.5" >submit_bio_noacct</text>
</g>
<g >
<title>update_process_times (311,089,573 samples, 7.28%)</title><rect x="818.4" y="197" width="85.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="821.41" y="207.5" >update_pro..</text>
</g>
<g >
<title>ext4_setattr (530,178,194 samples, 12.40%)</title><rect x="335.8" y="357" width="146.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="338.83" y="367.5" >ext4_setattr</text>
</g>
<g >
<title>folio_alloc (22,496,569 samples, 0.53%)</title><rect x="913.8" y="357" width="6.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="916.83" y="367.5" ></text>
</g>
<g >
<title>try_charge_memcg (374,420,733 samples, 8.76%)</title><rect x="810.5" y="325" width="103.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="813.47" y="335.5" >try_charge_m..</text>
</g>
<g >
<title>kernel_fpu_begin_mask (21,493,522 samples, 0.50%)</title><rect x="342.0" y="165" width="6.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="345.04" y="175.5" ></text>
</g>
<g >
<title>do_open (530,178,194 samples, 12.40%)</title><rect x="335.8" y="405" width="146.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="338.83" y="415.5" >do_open</text>
</g>
<g >
<title>search_binary_handler (34,275,130 samples, 0.80%)</title><rect x="10.0" y="501" width="9.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,145,993,460 samples, 26.81%)</title><rect x="19.5" y="549" width="316.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="22.46" y="559.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>get_page_from_freelist (22,415,224 samples, 0.52%)</title><rect x="913.9" y="309" width="6.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="916.85" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (530,178,194 samples, 12.40%)</title><rect x="335.8" y="517" width="146.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="338.83" y="527.5" >entry_SYSCALL_64_a..</text>
</g>
<g >
<title>__filemap_remove_folio (244,501,052 samples, 5.72%)</title><rect x="375.7" y="293" width="67.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="378.73" y="303.5" >__filem..</text>
</g>
<g >
<title>main (4,240,025,946 samples, 99.20%)</title><rect x="19.5" y="645" width="1170.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="22.46" y="655.5" >main</text>
</g>
<g >
<title>free_buffer_head (114,099,443 samples, 2.67%)</title><rect x="450.7" y="197" width="31.5" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="453.67" y="207.5" >fr..</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (311,089,573 samples, 7.28%)</title><rect x="818.4" y="277" width="85.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="821.41" y="287.5" >__sysvec_a..</text>
</g>
<g >
<title>truncate_pagecache (486,200,242 samples, 11.37%)</title><rect x="348.0" y="341" width="134.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="350.97" y="351.5" >truncate_pagecache</text>
</g>
<g >
<title>blk_mq_flush_plug_list.part.0 (555,477,682 samples, 13.00%)</title><rect x="108.9" y="213" width="153.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="111.92" y="223.5" >blk_mq_flush_plug_l..</text>
</g>
<g >
<title>do_sys_openat2 (530,178,194 samples, 12.40%)</title><rect x="335.8" y="453" width="146.4" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="338.83" y="463.5" >do_sys_openat2</text>
</g>
<g >
<title>__folio_mark_dirty (61,019,346 samples, 1.43%)</title><rect x="1146.1" y="341" width="16.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1149.09" y="351.5" ></text>
</g>
<g >
<title>notify_change (530,178,194 samples, 12.40%)</title><rect x="335.8" y="373" width="146.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="338.83" y="383.5" >notify_change</text>
</g>
<g >
<title>io-lat-write (4,274,301,076 samples, 100.00%)</title><rect x="10.0" y="661" width="1180.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="13.00" y="671.5" >io-lat-write</text>
</g>
<g >
<title>block_invalidate_folio (114,099,443 samples, 2.67%)</title><rect x="450.7" y="277" width="31.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="453.67" y="287.5" >bl..</text>
</g>
<g >
<title>__count_memcg_events (23,265,887 samples, 0.54%)</title><rect x="779.9" y="325" width="6.4" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="782.89" y="335.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (86,057,787 samples, 2.01%)</title><rect x="1146.1" y="357" width="23.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1149.09" y="367.5" >m..</text>
</g>
<g >
<title>truncate_cleanup_folio (114,099,443 samples, 2.67%)</title><rect x="450.7" y="309" width="31.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="453.67" y="319.5" >tr..</text>
</g>
<g >
<title>percpu_counter_add_batch (27,910,605 samples, 0.65%)</title><rect x="305.5" y="245" width="7.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="308.53" y="255.5" ></text>
</g>
<g >
<title>__srcu_read_unlock (25,094,277 samples, 0.59%)</title><rect x="521.3" y="437" width="6.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="524.28" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_execve (34,275,130 samples, 0.80%)</title><rect x="10.0" y="581" width="9.5" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>nvme_pci_setup_prps (28,904,859 samples, 0.68%)</title><rect x="241.4" y="149" width="8.0" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="244.41" y="159.5" ></text>
</g>
<g >
<title>folio_memcg_unlock (25,038,441 samples, 0.59%)</title><rect x="1162.9" y="341" width="6.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1165.94" y="351.5" ></text>
</g>
<g >
<title>import_iovec (26,200,865 samples, 0.61%)</title><rect x="1169.8" y="469" width="7.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1172.85" y="479.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (2,273,687,153 samples, 53.19%)</title><rect x="542.2" y="453" width="627.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="545.17" y="463.5" >ext4_file_write_iter</text>
</g>
<g >
<title>exec_binprm (34,275,130 samples, 0.80%)</title><rect x="10.0" y="517" width="9.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>create_empty_buffers (49,093,306 samples, 1.15%)</title><rect x="941.1" y="373" width="13.6" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="944.14" y="383.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (530,178,194 samples, 12.40%)</title><rect x="335.8" y="613" width="146.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="338.83" y="623.5" >std::basic_filebuf..</text>
</g>
<g >
<title>__hrtimer_run_queues (311,089,573 samples, 7.28%)</title><rect x="818.4" y="245" width="85.9" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="821.41" y="255.5" >__hrtimer_..</text>
</g>
<g >
<title>__memcg_slab_free_hook (91,502,029 samples, 2.14%)</title><rect x="450.7" y="165" width="25.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="453.67" y="175.5" >_..</text>
</g>
<g >
<title>memcpy@plt (26,173,931 samples, 0.61%)</title><rect x="482.2" y="597" width="7.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="485.19" y="607.5" ></text>
</g>
<g >
<title>mpage_process_folio (20,262,669 samples, 0.47%)</title><rect x="269.4" y="293" width="5.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="272.35" y="303.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (34,275,130 samples, 0.80%)</title><rect x="10.0" y="405" width="9.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>__alloc_pages (22,496,569 samples, 0.53%)</title><rect x="913.8" y="325" width="6.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="916.83" y="335.5" ></text>
</g>
<g >
<title>ext4_da_write_end (171,222,594 samples, 4.01%)</title><rect x="1122.6" y="405" width="47.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1125.58" y="415.5" >ext4..</text>
</g>
<g >
<title>vma_complete (34,275,130 samples, 0.80%)</title><rect x="10.0" y="373" width="9.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (27,808,821 samples, 0.65%)</title><rect x="941.1" y="261" width="7.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="944.14" y="271.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (458,316,596 samples, 10.72%)</title><rect x="355.7" y="325" width="126.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="358.67" y="335.5" >truncate_inode_..</text>
</g>
<g >
<title>folio_unlock (27,883,646 samples, 0.65%)</title><rect x="348.0" y="325" width="7.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="350.97" y="335.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (2,273,687,153 samples, 53.19%)</title><rect x="542.2" y="437" width="627.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="545.17" y="447.5" >ext4_buffered_write_iter</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (23,229,262 samples, 0.54%)</title><rect x="299.1" y="245" width="6.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="302.11" y="255.5" ></text>
</g>
<g >
<title>mod_objcg_state (27,808,821 samples, 0.65%)</title><rect x="941.1" y="293" width="7.7" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="944.14" y="303.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (608,159,089 samples, 14.23%)</title><rect x="954.7" y="357" width="167.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="957.69" y="367.5" >ext4_da_map_blocks.co..</text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (34,275,130 samples, 0.80%)</title><rect x="10.0" y="341" width="9.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (49,093,306 samples, 1.15%)</title><rect x="941.1" y="325" width="13.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="944.14" y="335.5" ></text>
</g>
<g >
<title>__vm_munmap (34,275,130 samples, 0.80%)</title><rect x="10.0" y="437" width="9.5" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>bprm_execve (34,275,130 samples, 0.80%)</title><rect x="10.0" y="549" width="9.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_writev (2,424,873,601 samples, 56.73%)</title><rect x="513.5" y="517" width="669.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="516.51" y="527.5" >__x64_sys_writev</text>
</g>
<g >
<title>filemap_remove_folio (284,305,789 samples, 6.65%)</title><rect x="364.7" y="309" width="78.5" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="367.74" y="319.5" >filemap_r..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (311,089,573 samples, 7.28%)</title><rect x="818.4" y="309" width="85.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="821.41" y="319.5" >asm_sysvec..</text>
</g>
<g >
<title>mas_wr_node_store (34,275,130 samples, 0.80%)</title><rect x="10.0" y="309" width="9.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>ext4_mb_clear_bb (43,977,952 samples, 1.03%)</title><rect x="335.8" y="245" width="12.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="338.83" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock (27,877,019 samples, 0.65%)</title><rect x="933.4" y="373" width="7.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="936.44" y="383.5" ></text>
</g>
<g >
<title>ext4_alloc_da_blocks (1,145,993,460 samples, 26.81%)</title><rect x="19.5" y="437" width="316.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="22.46" y="447.5" >ext4_alloc_da_blocks</text>
</g>
<g >
<title>ext4_free_blocks (43,977,952 samples, 1.03%)</title><rect x="335.8" y="261" width="12.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="338.83" y="271.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (2,512,145,421 samples, 58.77%)</title><rect x="489.4" y="597" width="693.5" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="492.42" y="607.5" >std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn</text>
</g>
<g >
<title>__GI___writev (2,512,145,421 samples, 58.77%)</title><rect x="489.4" y="581" width="693.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="492.42" y="591.5" >__GI___writev</text>
</g>
<g >
<title>__submit_bio (879,533,137 samples, 20.58%)</title><rect x="19.5" y="261" width="242.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="22.46" y="271.5" >__submit_bio</text>
</g>
<g >
<title>[unknown] (34,275,130 samples, 0.80%)</title><rect x="10.0" y="645" width="9.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>bio_split_rw (324,055,455 samples, 7.58%)</title><rect x="19.5" y="213" width="89.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="22.46" y="223.5" >bio_split_rw</text>
</g>
<g >
<title>dma_map_sgtable (479,902,718 samples, 11.23%)</title><rect x="108.9" y="149" width="132.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="111.92" y="159.5" >dma_map_sgtable</text>
</g>
<g >
<title>mas_store_prealloc (34,275,130 samples, 0.80%)</title><rect x="10.0" y="357" width="9.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>ext4_do_writepages (1,145,993,460 samples, 26.81%)</title><rect x="19.5" y="341" width="316.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="22.46" y="351.5" >ext4_do_writepages</text>
</g>
<g >
<title>filemap_alloc_folio (22,496,569 samples, 0.53%)</title><rect x="913.8" y="373" width="6.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="916.83" y="383.5" ></text>
</g>
<g >
<title>do_iter_readv_writev (2,273,687,153 samples, 53.19%)</title><rect x="542.2" y="469" width="627.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="545.17" y="479.5" >do_iter_readv_writev</text>
</g>
<g >
<title>mpage_prepare_extent_to_map (28,292,058 samples, 0.66%)</title><rect x="328.0" y="325" width="7.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="331.02" y="335.5" ></text>
</g>
<g >
<title>filemap_flush (1,145,993,460 samples, 26.81%)</title><rect x="19.5" y="421" width="316.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="22.46" y="431.5" >filemap_flush</text>
</g>
<g >
<title>__fsnotify_parent (103,805,564 samples, 2.43%)</title><rect x="513.5" y="469" width="28.7" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="516.51" y="479.5" >__..</text>
</g>
<g >
<title>iommu_map_sg (479,902,718 samples, 11.23%)</title><rect x="108.9" y="101" width="132.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="111.92" y="111.5" >iommu_map_sg</text>
</g>
<g >
<title>entry_SYSCALL_64 (59,859,132 samples, 1.40%)</title><rect x="497.0" y="565" width="16.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="499.99" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,424,873,601 samples, 56.73%)</title><rect x="513.5" y="565" width="669.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="516.51" y="575.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>do_syscall_64 (1,145,993,460 samples, 26.81%)</title><rect x="19.5" y="533" width="316.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="22.46" y="543.5" >do_syscall_64</text>
</g>
<g >
<title>dget_parent (28,154,860 samples, 0.66%)</title><rect x="513.5" y="453" width="7.8" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="516.51" y="463.5" ></text>
</g>
<g >
<title>ext4_bio_write_folio (163,688,317 samples, 3.83%)</title><rect x="274.9" y="277" width="45.2" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="277.94" y="287.5" >ext4..</text>
</g>
<g >
<title>cgroup_rstat_updated (25,590,683 samples, 0.60%)</title><rect x="793.8" y="309" width="7.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="796.84" y="319.5" ></text>
</g>
<g >
<title>filemap_get_folios (25,457,266 samples, 0.60%)</title><rect x="262.3" y="293" width="7.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="265.32" y="303.5" ></text>
</g>
<g >
<title>node_dirty_ok (22,415,224 samples, 0.52%)</title><rect x="913.9" y="293" width="6.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="916.85" y="303.5" ></text>
</g>
<g >
<title>__folio_batch_release (32,760,101 samples, 0.77%)</title><rect x="355.7" y="309" width="9.0" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="358.69" y="319.5" ></text>
</g>
<g >
<title>sg_init_table (46,670,105 samples, 1.09%)</title><rect x="249.4" y="149" width="12.9" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="252.39" y="159.5" ></text>
</g>
<g >
<title>__filemap_add_folio (916,006,959 samples, 21.43%)</title><rect x="661.0" y="357" width="252.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="663.96" y="367.5" >__filemap_add_folio</text>
</g>
<g >
<title>ext4_truncate (43,977,952 samples, 1.03%)</title><rect x="335.8" y="341" width="12.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="338.83" y="351.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (311,089,573 samples, 7.28%)</title><rect x="818.4" y="293" width="85.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="821.41" y="303.5" >sysvec_api..</text>
</g>
<g >
<title>IOLatencyWriteBenchmark::run (4,214,491,006 samples, 98.60%)</title><rect x="19.5" y="629" width="1163.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="22.46" y="639.5" >IOLatencyWriteBenchmark::run</text>
</g>
<g >
<title>__block_commit_write (171,222,594 samples, 4.01%)</title><rect x="1122.6" y="373" width="47.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1125.58" y="383.5" >__bl..</text>
</g>
<g >
<title>clflush_cache_range (40,402,859 samples, 0.95%)</title><rect x="230.3" y="37" width="11.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="233.25" y="47.5" ></text>
</g>
<g >
<title>__import_iovec (26,200,865 samples, 0.61%)</title><rect x="1169.8" y="453" width="7.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1172.85" y="463.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (22,496,569 samples, 0.53%)</title><rect x="913.8" y="341" width="6.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="916.83" y="351.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (28,506,896 samples, 0.67%)</title><rect x="1146.1" y="325" width="7.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1149.09" y="335.5" ></text>
</g>
<g >
<title>__lruvec_stat_mod_folio (340,715,200 samples, 7.97%)</title><rect x="685.8" y="341" width="94.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="688.83" y="351.5" >__lruvec_st..</text>
</g>
<g >
<title>__folio_start_writeback (83,087,406 samples, 1.94%)</title><rect x="290.3" y="261" width="22.9" height="15.0" fill="rgb(209,20,5)" rx="2" ry="2" />
<text  x="293.29" y="271.5" >_..</text>
</g>
<g >
<title>__dquot_alloc_space (25,058,390 samples, 0.59%)</title><rect x="970.5" y="341" width="6.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="973.46" y="351.5" ></text>
</g>
<g >
<title>__filemap_get_folio (960,507,922 samples, 22.47%)</title><rect x="661.0" y="389" width="265.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="663.96" y="399.5" >__filemap_get_folio</text>
</g>
<g >
<title>__x64_sys_openat (530,178,194 samples, 12.40%)</title><rect x="335.8" y="469" width="146.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="338.83" y="479.5" >__x64_sys_openat</text>
</g>
<g >
<title>send_to_group (50,556,427 samples, 1.18%)</title><rect x="528.2" y="437" width="14.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="531.21" y="447.5" ></text>
</g>
<g >
<title>iommu_dma_map_sg (479,902,718 samples, 11.23%)</title><rect x="108.9" y="117" width="132.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="111.92" y="127.5" >iommu_dma_map_sg</text>
</g>
<g >
<title>mod_memcg_lruvec_state (27,808,821 samples, 0.65%)</title><rect x="941.1" y="277" width="7.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="944.14" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (34,275,130 samples, 0.80%)</title><rect x="10.0" y="629" width="9.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_close (1,145,993,460 samples, 26.81%)</title><rect x="19.5" y="501" width="316.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="22.46" y="511.5" >__x64_sys_close</text>
</g>
<g >
<title>ext4_ext_rm_leaf (43,977,952 samples, 1.03%)</title><rect x="335.8" y="293" width="12.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="338.83" y="303.5" ></text>
</g>
<g >
<title>lruvec_stat_mod_folio (28,564,708 samples, 0.67%)</title><rect x="320.1" y="277" width="7.9" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="323.13" y="287.5" ></text>
</g>
<g >
<title>x64_sys_call (1,145,993,460 samples, 26.81%)</title><rect x="19.5" y="517" width="316.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="22.46" y="527.5" >x64_sys_call</text>
</g>
<g >
<title>copy_iovec_from_user (26,200,865 samples, 0.61%)</title><rect x="1169.8" y="437" width="7.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1172.85" y="447.5" ></text>
</g>
<g >
<title>crc32c_pcl_intel_update (21,493,522 samples, 0.50%)</title><rect x="342.0" y="181" width="6.0" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="345.04" y="191.5" ></text>
</g>
<g >
<title>blk_mq_submit_bio (879,533,137 samples, 20.58%)</title><rect x="19.5" y="245" width="242.8" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="22.46" y="255.5" >blk_mq_submit_bio</text>
</g>
<g >
<title>filemap_fdatawrite_wbc (1,145,993,460 samples, 26.81%)</title><rect x="19.5" y="389" width="316.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="22.46" y="399.5" >filemap_fdatawrite_wbc</text>
</g>
<g >
<title>ext4_release_folio (114,099,443 samples, 2.67%)</title><rect x="450.7" y="245" width="31.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="453.67" y="255.5" >ex..</text>
</g>
<g >
<title>do_writepages (1,145,993,460 samples, 26.81%)</title><rect x="19.5" y="373" width="316.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="22.46" y="383.5" >do_writepages</text>
</g>
<g >
<title>__mem_cgroup_charge (485,194,459 samples, 11.35%)</title><rect x="779.9" y="341" width="133.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="782.89" y="351.5" >__mem_cgroup_cha..</text>
</g>
<g >
<title>slab_update_freelist.isra.0 (22,597,414 samples, 0.53%)</title><rect x="475.9" y="165" width="6.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="478.93" y="175.5" ></text>
</g>
<g >
<title>elf_load (34,275,130 samples, 0.80%)</title><rect x="10.0" y="469" width="9.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>ext4_release_file (1,145,993,460 samples, 26.81%)</title><rect x="19.5" y="453" width="316.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="22.46" y="463.5" >ext4_release_file</text>
</g>
<g >
<title>ext4_io_submit (879,533,137 samples, 20.58%)</title><rect x="19.5" y="325" width="242.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="22.46" y="335.5" >ext4_io_submit</text>
</g>
<g >
<title>ext4_da_write_begin (1,672,172,622 samples, 39.12%)</title><rect x="661.0" y="405" width="461.6" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="663.96" y="415.5" >ext4_da_write_begin</text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (311,089,573 samples, 7.28%)</title><rect x="818.4" y="149" width="85.9" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="821.41" y="159.5" >perf_adjus..</text>
</g>
<g >
<title>xas_store (244,501,052 samples, 5.72%)</title><rect x="375.7" y="277" width="67.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="378.73" y="287.5" >xas_store</text>
</g>
<g >
<title>__domain_mapping (479,902,718 samples, 11.23%)</title><rect x="108.9" y="53" width="132.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="111.92" y="63.5" >__domain_mapping</text>
</g>
<g >
<title>__iommu_map (479,902,718 samples, 11.23%)</title><rect x="108.9" y="85" width="132.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="111.92" y="95.5" >__iommu_map</text>
</g>
<g >
<title>xas_load (22,004,394 samples, 0.51%)</title><rect x="920.0" y="357" width="6.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="923.04" y="367.5" ></text>
</g>
<g >
<title>_IO_file_open (530,178,194 samples, 12.40%)</title><rect x="335.8" y="549" width="146.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="338.83" y="559.5" >_IO_file_open</text>
</g>
<g >
<title>fscrypt_mergeable_bio_bh (25,002,702 samples, 0.58%)</title><rect x="313.2" y="261" width="6.9" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="316.23" y="271.5" ></text>
</g>
<g >
<title>vfs_writev (2,424,873,601 samples, 56.73%)</title><rect x="513.5" y="485" width="669.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="516.51" y="495.5" >vfs_writev</text>
</g>
<g >
<title>mpage_map_and_submit_buffers (237,972,960 samples, 5.57%)</title><rect x="262.3" y="309" width="65.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="265.32" y="319.5" >mpage_m..</text>
</g>
<g >
<title>filemap_get_entry (22,004,394 samples, 0.51%)</title><rect x="920.0" y="373" width="6.1" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="923.04" y="383.5" ></text>
</g>
<g >
<title>__fput (1,145,993,460 samples, 26.81%)</title><rect x="19.5" y="469" width="316.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="22.46" y="479.5" >__fput</text>
</g>
<g >
<title>free_unref_page_commit (32,760,101 samples, 0.77%)</title><rect x="355.7" y="261" width="9.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="358.69" y="271.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (311,089,573 samples, 7.28%)</title><rect x="818.4" y="229" width="85.9" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="821.41" y="239.5" >tick_nohz_..</text>
</g>
<g >
<title>__filemap_fdatawrite_range (1,145,993,460 samples, 26.81%)</title><rect x="19.5" y="405" width="316.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="22.46" y="415.5" >__filemap_fdatawrite_range</text>
</g>
<g >
<title>__fput_sync (1,145,993,460 samples, 26.81%)</title><rect x="19.5" y="485" width="316.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="22.46" y="495.5" >__fput_sync</text>
</g>
<g >
<title>tick_sched_handle (311,089,573 samples, 7.28%)</title><rect x="818.4" y="213" width="85.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="821.41" y="223.5" >tick_sched..</text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (530,178,194 samples, 12.40%)</title><rect x="335.8" y="597" width="146.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="338.83" y="607.5" >std::__basic_file&lt;..</text>
</g>
<g >
<title>ext4_ext_remove_space (43,977,952 samples, 1.03%)</title><rect x="335.8" y="309" width="12.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="338.83" y="319.5" ></text>
</g>
<g >
<title>memcg_check_events (34,641,949 samples, 0.81%)</title><rect x="800.9" y="309" width="9.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="803.90" y="319.5" ></text>
</g>
<g >
<title>filemap_release_folio (114,099,443 samples, 2.67%)</title><rect x="450.7" y="261" width="31.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="453.67" y="271.5" >fi..</text>
</g>
<g >
<title>release_pages (32,760,101 samples, 0.77%)</title><rect x="355.7" y="293" width="9.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="358.69" y="303.5" ></text>
</g>
<g >
<title>do_vmi_munmap (34,275,130 samples, 0.80%)</title><rect x="10.0" y="421" width="9.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (28,154,860 samples, 0.66%)</title><rect x="513.5" y="437" width="7.8" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="516.51" y="447.5" ></text>
</g>
<g >
<title>block_write_end (171,222,594 samples, 4.01%)</title><rect x="1122.6" y="389" width="47.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1125.58" y="399.5" >bloc..</text>
</g>
<g >
<title>xas_clear_mark (29,650,938 samples, 0.69%)</title><rect x="435.0" y="261" width="8.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="438.04" y="271.5" ></text>
</g>
<g >
<title>generic_perform_write (2,273,561,084 samples, 53.19%)</title><rect x="542.2" y="421" width="627.6" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="545.20" y="431.5" >generic_perform_write</text>
</g>
<g >
<title>blk_add_rq_to_plug (555,477,682 samples, 13.00%)</title><rect x="108.9" y="229" width="153.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="111.92" y="239.5" >blk_add_rq_to_plug</text>
</g>
<g >
<title>ext4_mb_mark_context (43,977,952 samples, 1.03%)</title><rect x="335.8" y="229" width="12.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="338.83" y="239.5" ></text>
</g>
<g >
<title>consume_obj_stock (21,284,485 samples, 0.50%)</title><rect x="948.8" y="309" width="5.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="951.81" y="319.5" ></text>
</g>
<g >
<title>ext4_block_bitmap_csum_set (21,493,522 samples, 0.50%)</title><rect x="342.0" y="213" width="6.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="345.04" y="223.5" ></text>
</g>
<g >
<title>crypto_shash_update (21,493,522 samples, 0.50%)</title><rect x="342.0" y="197" width="6.0" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="345.04" y="207.5" ></text>
</g>
<g >
<title>alloc_buffer_head (49,093,306 samples, 1.15%)</title><rect x="941.1" y="341" width="13.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="944.14" y="351.5" ></text>
</g>
<g >
<title>vm_munmap (34,275,130 samples, 0.80%)</title><rect x="10.0" y="453" width="9.5" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>submit_bio_noacct_nocheck (879,533,137 samples, 20.58%)</title><rect x="19.5" y="277" width="242.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="22.46" y="287.5" >submit_bio_noacct_nocheck</text>
</g>
<g >
<title>path_openat (530,178,194 samples, 12.40%)</title><rect x="335.8" y="421" width="146.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="338.83" y="431.5" >path_openat</text>
</g>
<g >
<title>filemap_add_folio (916,006,959 samples, 21.43%)</title><rect x="661.0" y="373" width="252.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="663.96" y="383.5" >filemap_add_folio</text>
</g>
<g >
<title>_raw_read_unlock (501,568,156 samples, 11.73%)</title><rect x="984.1" y="341" width="138.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="987.10" y="351.5" >_raw_read_unlock</text>
</g>
<g >
<title>perf_event_task_tick (311,089,573 samples, 7.28%)</title><rect x="818.4" y="165" width="85.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="821.41" y="175.5" >perf_event..</text>
</g>
<g >
<title>folio_alloc_buffers (49,093,306 samples, 1.15%)</title><rect x="941.1" y="357" width="13.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="944.14" y="367.5" ></text>
</g>
<g >
<title>do_writev (2,424,873,601 samples, 56.73%)</title><rect x="513.5" y="501" width="669.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="516.51" y="511.5" >do_writev</text>
</g>
<g >
<title>kmem_cache_free (114,099,443 samples, 2.67%)</title><rect x="450.7" y="181" width="31.5" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="453.67" y="191.5" >km..</text>
</g>
<g >
<title>filemap_get_folios_tag (28,292,058 samples, 0.66%)</title><rect x="328.0" y="309" width="7.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="331.02" y="319.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (34,275,130 samples, 0.80%)</title><rect x="10.0" y="533" width="9.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>consume_stock (34,574,944 samples, 0.81%)</title><rect x="904.3" y="309" width="9.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="907.29" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,424,873,601 samples, 56.73%)</title><rect x="513.5" y="549" width="669.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="516.51" y="559.5" >do_syscall_64</text>
</g>
<g >
<title>do_execveat_common.isra.0 (34,275,130 samples, 0.80%)</title><rect x="10.0" y="565" width="9.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>copy_page_from_iter_atomic (430,036,111 samples, 10.06%)</title><rect x="542.2" y="405" width="118.8" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="545.24" y="415.5" >copy_page_from..</text>
</g>
<g >
<title>xas_start (22,004,394 samples, 0.51%)</title><rect x="920.0" y="341" width="6.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="923.04" y="351.5" ></text>
</g>
<g >
<title>filemap_get_folios_tag (25,457,266 samples, 0.60%)</title><rect x="262.3" y="277" width="7.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="265.32" y="287.5" ></text>
</g>
<g >
<title>fclose@@GLIBC_2.2.5 (1,145,993,460 samples, 26.81%)</title><rect x="19.5" y="581" width="316.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="22.46" y="591.5" >fclose@@GLIBC_2.2.5</text>
</g>
<g >
<title>ext4_ext_truncate (43,977,952 samples, 1.03%)</title><rect x="335.8" y="325" width="12.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="338.83" y="335.5" ></text>
</g>
<g >
<title>x64_sys_call (34,275,130 samples, 0.80%)</title><rect x="10.0" y="597" width="9.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>nvme_prep_rq.part.0 (555,477,682 samples, 13.00%)</title><rect x="108.9" y="181" width="153.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="111.92" y="191.5" >nvme_prep_rq.part.0</text>
</g>
<g >
<title>scheduler_tick (311,089,573 samples, 7.28%)</title><rect x="818.4" y="181" width="85.9" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="821.41" y="191.5" >scheduler_..</text>
</g>
<g >
<title>hrtimer_interrupt (311,089,573 samples, 7.28%)</title><rect x="818.4" y="261" width="85.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="821.41" y="271.5" >hrtimer_in..</text>
</g>
<g >
<title>ext4_da_get_block_prep (608,159,089 samples, 14.23%)</title><rect x="954.7" y="373" width="167.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="957.69" y="383.5" >ext4_da_get_block_prep</text>
</g>
<g >
<title>mpage_map_and_submit_extent (238,168,265 samples, 5.57%)</title><rect x="262.3" y="325" width="65.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="265.27" y="335.5" >mpage_m..</text>
</g>
<g >
<title>inotify_handle_inode_event (21,987,282 samples, 0.51%)</title><rect x="528.2" y="405" width="6.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="531.21" y="415.5" ></text>
</g>
<g >
<title>fsnotify (75,650,704 samples, 1.77%)</title><rect x="521.3" y="453" width="20.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="524.28" y="463.5" ></text>
</g>
<g >
<title>__dma_map_sg_attrs (479,902,718 samples, 11.23%)</title><rect x="108.9" y="133" width="132.5" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="111.92" y="143.5" >__dma_map_sg_attrs</text>
</g>
<g >
<title>__bio_split_to_limits (324,055,455 samples, 7.58%)</title><rect x="19.5" y="229" width="89.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="22.46" y="239.5" >__bio_spli..</text>
</g>
<g >
<title>__close_nocancel (1,145,993,460 samples, 26.81%)</title><rect x="19.5" y="565" width="316.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="22.46" y="575.5" >__close_nocancel</text>
</g>
<g >
<title>ext4_block_write_begin (711,664,700 samples, 16.65%)</title><rect x="926.1" y="389" width="196.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="929.12" y="399.5" >ext4_block_write_begin</text>
</g>
<g >
<title>do_syscall_64 (530,178,194 samples, 12.40%)</title><rect x="335.8" y="501" width="146.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="338.83" y="511.5" >do_syscall_64</text>
</g>
<g >
<title>security_file_permission (21,180,019 samples, 0.50%)</title><rect x="1177.1" y="469" width="5.8" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1180.08" y="479.5" ></text>
</g>
<g >
<title>__GI___libc_open (530,178,194 samples, 12.40%)</title><rect x="335.8" y="533" width="146.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="338.83" y="543.5" >__GI___libc_open</text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (1,145,993,460 samples, 26.81%)</title><rect x="19.5" y="613" width="316.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="22.46" y="623.5" >std::basic_filebuf&lt;char, std::char_traits&lt;..</text>
</g>
<g >
<title>mas_wr_modify (34,275,130 samples, 0.80%)</title><rect x="10.0" y="325" width="9.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (60,232,632 samples, 1.41%)</title><rect x="793.8" y="325" width="16.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="796.84" y="335.5" ></text>
</g>
<g >
<title>all (4,274,376,858 samples, 100%)</title><rect x="10.0" y="677" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>try_to_free_buffers (114,099,443 samples, 2.67%)</title><rect x="450.7" y="213" width="31.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="453.67" y="223.5" >tr..</text>
</g>
<g >
<title>get_mem_cgroup_from_mm (27,275,207 samples, 0.64%)</title><rect x="786.3" y="325" width="7.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="789.31" y="335.5" ></text>
</g>
<g >
<title>fsnotify_handle_inode_event.isra.0 (50,556,427 samples, 1.18%)</title><rect x="528.2" y="421" width="14.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="531.21" y="431.5" ></text>
</g>
<g >
<title>__memcg_slab_post_alloc_hook (27,808,821 samples, 0.65%)</title><rect x="941.1" y="309" width="7.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="944.14" y="319.5" ></text>
</g>
<g >
<title>nvme_queue_rqs (555,477,682 samples, 13.00%)</title><rect x="108.9" y="197" width="153.4" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="111.92" y="207.5" >nvme_queue_rqs</text>
</g>
<g >
<title>__split_vma (34,275,130 samples, 0.80%)</title><rect x="10.0" y="389" width="9.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (340,715,200 samples, 7.97%)</title><rect x="685.8" y="325" width="94.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="688.83" y="335.5" >__mod_memcg..</text>
</g>
<g >
<title>__raw_spin_lock_irqsave (32,512,450 samples, 0.76%)</title><rect x="1154.0" y="325" width="8.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1156.96" y="335.5" ></text>
</g>
</g>
</svg>
